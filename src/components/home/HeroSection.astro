<section class="bg-white text-gray-800 min-h-[80vh] flex items-center">
    <div class="container w-full py-[60px] px-6 md:py-20 lg:py-[100px]">
        <div class="flex flex-col gap-12 items-center md:flex-row md:gap-[60px] md:items-center md:text-left lg:gap-20">
            <div class="max-w-[600px] md:flex-1 md:max-w-none">
                <span class="hero-tagline hero-animate text-[0.9rem] font-medium text-accent-600 uppercase tracking-[0.15em] mb-4 block" data-delay="100"
                    >Technical Product Expert</span
                >
                <h1 class="hero-title hero-animate text-[3rem] font-light text-gray-900 m-0 mb-8 leading-[1.1] tracking-tight md:text-[3.5rem] md:mb-9 lg:text-[4rem]" data-delay="200">
                    Hi, I'm Hanif
                </h1>
                <div class="hero-description hero-animate flex flex-col gap-5 mb-10 md:mb-12" data-delay="300">
                    <p class="text-lg font-light leading-relaxed text-gray-500 m-0 lg:text-[1.25rem]">
                        I help agencies and businesses build products that users love by combining 
                        user research, strategic thinking, and full-stack development in one person.
                    </p>
                    <p class="text-lg font-light leading-relaxed text-gray-500 m-0 lg:text-[1.25rem]">
                        With 7 years of technical experience, I can quickly turn ideas into working prototypes, 
                        then build the production versionâ€”eliminating handoff friction and reducing project risk.
                    </p>
                </div>
                <div class="hero-actions hero-animate flex flex-col gap-4 items-center md:flex-row md:gap-5 md:items-start" data-delay="400">
                    <a href="/services" class="hero-button primary inline-block py-button-y px-button-x text-[0.95rem] font-normal tracking-normal transition-all duration-200 ease-in-out rounded-sm text-center w-full transform translate-y-0 bg-gray-800 text-white border border-gray-800 hover:bg-gray-900 hover:border-gray-900 hover:-translate-y-px"
                        >View My Services</a
                    >
                    <a class="hero-button secondary inline-block py-button-y px-button-x text-[0.95rem] font-normal tracking-normal transition-all duration-200 ease-in-out rounded-sm text-center w-full transform translate-y-0 bg-transparent text-gray-800 border border-gray-300 hover:bg-gray-100 hover:border-gray-400 hover:-translate-y-px" href="https://cal.com/hanifcarroll/discovery">
                        Schedule a Discovery Call
                    </a>
                </div>
            </div>
            <div
                class="hero-image-container hero-animate-scale flex-shrink-0"
                data-delay="500"
            >
                <img
                    src="img/portrait.webp"
                    alt="Portrait of Hanif Carroll, smiling."
                    class="hero-image w-[280px] h-auto object-cover rounded-sm block transition-transform duration-300 ease-in-out hover:scale-[1.02] md:w-80 lg:w-[360px]"
                />
            </div>
        </div>
    </div>
</section>

<script>
    // Wait for DOM to be ready
    document.addEventListener("DOMContentLoaded", () => {
        // Check if user prefers reduced motion
        const prefersReducedMotion = window.matchMedia(
            "(prefers-reduced-motion: reduce)"
        ).matches;

        if (prefersReducedMotion) {
            // If user prefers reduced motion, just show all elements
            document
                .querySelectorAll(".hero-animate, .hero-animate-scale")
                .forEach((el) => {
                    (el as HTMLElement).style.opacity = "1";
                    (el as HTMLElement).style.transform = "none";
                });
            return;
        }

        // Animate elements with staggered timing
        const animateElements = document.querySelectorAll(".hero-animate");
        const scaleElements = document.querySelectorAll(".hero-animate-scale");

        animateElements.forEach((el) => {
            const delay = parseInt(el.getAttribute("data-delay") || "0");
            setTimeout(() => {
                el.classList.add("animate-in");
            }, delay);
        });

        scaleElements.forEach((el) => {
            const delay = parseInt(el.getAttribute("data-delay") || "0");
            setTimeout(() => {
                el.classList.add("animate-scale-in");
            }, delay);
        });
    });
</script>

<style>
    /* Animation keyframes */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInScale {
        from {
            opacity: 0;
            transform: scale(0.95) translateY(20px);
        }
        to {
            opacity: 1;
            transform: scale(1) translateY(0);
        }
    }

    /* Initial states */
    .hero-animate {
        opacity: 0;
        transform: translateY(30px);
        transition: none;
    }

    .hero-animate-scale {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
        transition: none;
    }

    /* Animated states */
    .hero-animate.animate-in {
        animation: fadeInUp 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    .hero-animate-scale.animate-scale-in {
        animation: fadeInScale 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    /* Reduce motion for users who prefer it */
    @media (prefers-reduced-motion: reduce) {
        .hero-animate,
        .hero-animate-scale {
            opacity: 1 !important;
            transform: none !important;
        }

        .hero-animate.animate-in,
        .hero-animate-scale.animate-scale-in {
            animation: none !important;
        }

        .hero-button:hover,
        .hero-image:hover {
            transform: none;
        }
    }
</style>
