<section class="hero-section">
    <div class="container hero-container">
        <div class="hero-content">
            <div class="hero-text">
                <span class="hero-tagline hero-animate" data-delay="100"
                    >Product Engineer</span
                >
                <h1 class="hero-title hero-animate" data-delay="200">
                    Hi, I'm Hanif
                </h1>
                <div class="hero-description hero-animate" data-delay="300">
                    <p>
                        I'm a product engineer who combines user research,
                        strategic thinking, and technical execution to build
                        products that users love.
                    </p>
                    <p>
                        After 7 years of building software, I've discovered that
                        the best products emerge when technical expertise meets
                        genuine user empathy and strategic product vision.
                    </p>
                </div>
                <div class="hero-actions hero-animate" data-delay="400">
                    <a href="#featured-projects" class="hero-button primary"
                        >View Featured Projects</a
                    >
                    <a class="hero-button secondary" href="#contact">
                        Let's Work Together
                    </a>
                </div>
            </div>
            <div
                class="hero-image-container hero-animate-scale"
                data-delay="500"
            >
                <img
                    src="img/portrait.webp"
                    alt="Portrait of Hanif Carroll, smiling."
                    class="hero-image"
                />
            </div>
        </div>
    </div>
</section>

<script>
    // Wait for DOM to be ready
    document.addEventListener("DOMContentLoaded", () => {
        // Check if user prefers reduced motion
        const prefersReducedMotion = window.matchMedia(
            "(prefers-reduced-motion: reduce)"
        ).matches;

        if (prefersReducedMotion) {
            // If user prefers reduced motion, just show all elements
            document
                .querySelectorAll(".hero-animate, .hero-animate-scale")
                .forEach((el) => {
                    (el as HTMLElement).style.opacity = "1";
                    (el as HTMLElement).style.transform = "none";
                });
            return;
        }

        // Animate elements with staggered timing
        const animateElements = document.querySelectorAll(".hero-animate");
        const scaleElements = document.querySelectorAll(".hero-animate-scale");

        animateElements.forEach((el) => {
            const delay = parseInt(el.getAttribute("data-delay") || "0");
            setTimeout(() => {
                el.classList.add("animate-in");
            }, delay);
        });

        scaleElements.forEach((el) => {
            const delay = parseInt(el.getAttribute("data-delay") || "0");
            setTimeout(() => {
                el.classList.add("animate-scale-in");
            }, delay);
        });
    });
</script>

<style>
    /* Animation keyframes */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInScale {
        from {
            opacity: 0;
            transform: scale(0.95) translateY(20px);
        }
        to {
            opacity: 1;
            transform: scale(1) translateY(0);
        }
    }

    /* Initial states */
    .hero-animate {
        opacity: 0;
        transform: translateY(30px);
        transition: none;
    }

    .hero-animate-scale {
        opacity: 0;
        transform: scale(0.95) translateY(20px);
        transition: none;
    }

    /* Animated states */
    .hero-animate.animate-in {
        animation: fadeInUp 0.8s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    .hero-animate-scale.animate-scale-in {
        animation: fadeInScale 1s cubic-bezier(0.16, 1, 0.3, 1) forwards;
    }

    .hero-section {
        background-color: #ffffff;
        color: #2c2c2c;
        min-height: 80vh;
        display: flex;
        align-items: center;
    }

    .hero-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 60px 24px;
        width: 100%;
    }

    .hero-content {
        display: flex;
        flex-direction: column;
        gap: 48px;
        align-items: center;
    }

    .hero-text {
        max-width: 600px;
    }

    .hero-tagline {
        font-size: 0.9rem;
        font-weight: 500;
        color: var(--accent-600);
        text-transform: uppercase;
        letter-spacing: 0.15em;
        margin-bottom: 16px;
        display: block;
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 300;
        color: #1a1a1a;
        margin: 0 0 32px 0;
        line-height: 1.1;
        letter-spacing: -0.02em;
    }

    .hero-description {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-bottom: 40px;
    }

    .hero-description p {
        font-size: 1.125rem;
        line-height: 1.6;
        color: #666;
        margin: 0;
        font-weight: 300;
    }

    .hero-actions {
        display: flex;
        flex-direction: column;
        gap: 16px;
        align-items: center;
    }

    .hero-button {
        display: inline-block;
        padding: 14px 28px;
        text-decoration: none;
        font-size: 0.95rem;
        font-weight: 400;
        letter-spacing: 0.01em;
        transition: all 0.2s ease;
        border-radius: 2px;
        text-align: center;
        width: 100%;
        transform: translateY(0);
    }

    .hero-button.primary {
        background-color: #2c2c2c;
        color: #ffffff;
        border: 1px solid #2c2c2c;
    }

    .hero-button.primary:hover {
        background-color: #1a1a1a;
        border-color: #1a1a1a;
        transform: translateY(-1px);
    }

    .hero-button.secondary {
        background-color: transparent;
        color: #2c2c2c;
        border: 1px solid #d1d1d1;
    }

    .hero-button.secondary:hover {
        background-color: #f5f5f5;
        border-color: #999;
        transform: translateY(-1px);
    }

    .hero-image-container {
        flex-shrink: 0;
    }

    .hero-image {
        width: 280px;
        height: auto;
        object-fit: cover;
        border-radius: 2px;
        display: block;
        transition: transform 0.3s ease;
    }

    .hero-image:hover {
        transform: scale(1.02);
    }

    /* Reduce motion for users who prefer it */
    @media (prefers-reduced-motion: reduce) {
        .hero-animate,
        .hero-animate-scale {
            opacity: 1 !important;
            transform: none !important;
        }

        .hero-animate.animate-in,
        .hero-animate-scale.animate-scale-in {
            animation: none !important;
        }

        .hero-button:hover,
        .hero-image:hover {
            transform: none;
        }
    }

    @media (min-width: 768px) {
        .hero-container {
            padding: 80px 24px;
        }

        .hero-content {
            flex-direction: row;
            gap: 60px;
            align-items: center;
            text-align: left;
        }

        .hero-text {
            flex: 1;
            max-width: none;
        }

        .hero-title {
            font-size: 3.5rem;
            margin-bottom: 36px;
        }

        .hero-description {
            margin-bottom: 48px;
        }

        .hero-actions {
            flex-direction: row;
            gap: 20px;
            align-items: flex-start;
        }

        .hero-image {
            width: 320px;
        }
    }

    @media (min-width: 1024px) {
        .hero-container {
            padding: 100px 24px;
        }

        .hero-content {
            gap: 80px;
        }

        .hero-title {
            font-size: 4rem;
        }

        .hero-description p {
            font-size: 1.25rem;
        }

        .hero-image {
            width: 360px;
        }
    }
</style>
