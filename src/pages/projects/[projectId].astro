---
import { getEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { render } from "astro:content";
import MarkdownRenderer from "../../components/MarkdownRenderer.astro";

export function getStaticPaths() {
    return [
        { params: { projectId: "language-exchange" } },
        { params: { projectId: "joplin-product-analysis" } },
        { params: { projectId: "wikipedia-infinite-scroll" } },
    ];
}
const { projectId } = Astro.params;
const project = await getEntry("projects", projectId);

if (!project) {
    throw new Error(`Project not found: ${projectId}`);
}

const { Content } = await render(project);
const hasContent = !!project.body && project.body.trim().length > 0;
---

<BaseLayout title={project.data.title} description={project.data.description}>
    <section
        class="container section-padding-block [&_h2]:mb-0 [&_img]:max-w-[800px] [&_img]:max-h-[800px] [&_h3]:mb-3 md:[&_h3]:mb-5"
    >
        <div class="flex flex-col gap-8 max-w-4xl mx-auto">
            <div class="text-center">
                <h1 class="text-4xl sm:text-5xl font-light tracking-tight text-gray-900 mb-6 leading-tight">{project.data.title}</h1>
                <p class="text-xl font-light leading-relaxed text-gray-600 max-w-3xl mx-auto">{project.data.description}</p>
            </div>
            {
                project.data.image && (
                    <div class="flex justify-center">
                        <Image
                            src={project.data.image}
                            alt={project.data.imageAlt ?? project.data.title}
                            class="w-full h-auto max-h-[600px] object-contain max-w-[800px] rounded-2xl shadow-sm"
                            loading="eager"
                            decoding="async"
                            format="webp"
                            quality="mid"
                        />
                    </div>
                )
            }
            <div class="bg-gradient-to-br from-gray-50 to-gray-100/50 border border-gray-200 rounded-2xl p-8 shadow-sm">
                <div class="grid md:grid-cols-2 gap-8 md:items-start">
                    <div class="space-y-6">
                        <div>
                            <span class="text-sm font-medium text-gray-500 uppercase tracking-wide mb-2 block">Project Type</span>
                            <div class="flex flex-wrap gap-2">
                                {
                                    project.data.tags.map((tag, index) => (
                                        <span class={`text-sm font-medium py-2 px-3 rounded-full transition-colors ${
                                            index === 0 
                                                ? "text-accent-700 bg-accent-100" 
                                                : "text-gray-600 bg-gray-100"
                                        }`}>
                                            {tag}
                                        </span>
                                    ))
                                }
                            </div>
                        </div>

                        <div>
                            <span class="text-sm font-medium text-gray-500 uppercase tracking-wide mb-2 block">Role</span>
                            <p class="text-lg font-light text-gray-700">{project.data.role}</p>
                        </div>
                    </div>
                    
                    <div class="space-y-6">
                        <div>
                            <span class="text-sm font-medium text-gray-500 uppercase tracking-wide mb-2 block">Tools Used</span>
                            <p class="text-lg font-light text-gray-700">{project.data.toolsUsed.join(", ")}</p>
                        </div>

                        {
                            (project.data.figmaLink ||
                                project.data.githubLink ||
                                project.data.siteLink) && (
                                <div>
                                    <span class="text-sm font-medium text-gray-500 uppercase tracking-wide mb-2 block">Project Links</span>
                                    <div class="flex flex-col gap-3">
                                        {project.data.figmaLink && (
                                            <a
                                                href={project.data.figmaLink}
                                                class="inline-flex items-center gap-2 text-accent-600 font-medium hover:text-accent-700 transition-colors group"
                                                target="_blank"
                                                rel="noopener noreferrer"
                                            >
                                                <span>View Figma Wireframes</span>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="transition-transform group-hover:translate-x-1">
                                                    <path d="M7 17l9.2-9.2M17 17V7H7"/>
                                                </svg>
                                            </a>
                                        )}
                                        {project.data.prototypeLink && (
                                            <a
                                                href={project.data.prototypeLink}
                                                class="inline-flex items-center gap-2 text-accent-600 font-medium hover:text-accent-700 transition-colors group"
                                                target="_blank"
                                                rel="noopener noreferrer"
                                            >
                                                <span>View Prototype</span>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="transition-transform group-hover:translate-x-1">
                                                    <path d="M7 17l9.2-9.2M17 17V7H7"/>
                                                </svg>
                                            </a>
                                        )}
                                        {project.data.siteLink && (
                                            <a
                                                href={project.data.siteLink}
                                                class="inline-flex items-center gap-2 text-accent-600 font-medium hover:text-accent-700 transition-colors group"
                                                target="_blank"
                                                rel="noopener noreferrer"
                                            >
                                                <span>View Live Site</span>
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="transition-transform group-hover:translate-x-1">
                                                    <path d="M7 17l9.2-9.2M17 17V7H7"/>
                                                </svg>
                                            </a>
                                        )}
                                    </div>
                                </div>
                            )
                        }
                    </div>
                </div>
            </div>
            {
                hasContent && (
                    <div class="mt-16">
                        <MarkdownRenderer>
                            <Content />
                        </MarkdownRenderer>
                    </div>
                )
            }
        </div>
    </section>
</BaseLayout>
